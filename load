#!/usr/bin/env python3

def dc(char,name):
    output=name
    for x in char:
        output=output.replace(x,"")
    return output
def formatname(name):
    return dc("'.()?!@#$%^&*",name).replace(" ","-").lower()
class designsHtml:
    index="""
    <!DOCTYPE html>
    <html>
        <head>
            <link rel="stylesheet" href="main.css">
            <title>LinuxRocks2000 - A webcomic</title>
        </head>
        <body>
            <script src="header.js"></script>
                <div id="comiclist">
                    {}
                </div>
            </body>
    </html>
    """
    comic="""
    <!DOCTYPE html>
    <html>
        <head>
            <link rel="stylesheet" href="main.css">
            <title>LinuxRocks2000 - A webcomic</title>
        </head>
        <body>
            <script src="header.js"></script>
            <div id="comic-arena">
                <div id="comic-shrinkwrapper">
                    <p id="comic-name">{}</p>
                    <object type="image/svg+xml" width=70% data='https://linuxrocks2000.github.io/webcomic/{}'>Sorry, your browser could not load the comic. Please reload, or try again on a different browser.</object>
                    <div id="navbuttons">
                        <div id="backrow">
                            <a class="navbutton" href="{}">&lt;</a>
                        </div>
                        <div id="frontrow">
                            <a class="navbutton" href="{}">&gt;</a>
                        </div>
                    </div>
                </div>
            </div>
            <script type="text/javascript">
                var cap="{}";
                if (cap=="top"){{
                    var backrow=document.getElementById("frontrow");
                    backrow.parentNode.removeChild(backrow);
                }}
                if (cap=="bottom"){{
                    var backrow=document.getElementById("backrow");
                    backrow.parentNode.removeChild(backrow);
                }}
            </script>
        </body>
    </html>
    """
## Build the comic files
print("Building comic.")
import os, json
directory=os.listdir("webcomic")
file=open("config.js","r")
data=json.load(file)
print("Loaded JSON configuration file.")
## Load a bunch of data to index.html
print("Build comic links on the index.html website.")
cmlist=""""""
for x in data["comics"]:
    cmlist+="""
<a class="comic-link" href=\""""+x[0].replace(" ","-").lower()+"""">
    """+x[0]+"""
</a>
    """
c=open("index.html","w+")
c.write(designsHtml.index.format(cmlist))
c.close
file.close()



print("Build the actual comic files in the comic directory.")
for x in data["comics"]:
    cap="none"
    comic=open(formatname(x[0])+'.html',"w+")

    base=data["comics"]
    if base.index(x)!=0:
        bbref=formatname(base[base.index(x)-1][0])
    else:
        cap="bottom"
        bbref="none"
    if base.index(x)!=len(base)-1:
        fbref=formatname(base[base.index(x)+1][0])
    else:
        cap="top"
        fbref="none"
    comic.write(designsHtml.comic.format(x[0],x[1],bbref,fbref,cap))
    comic.close()
